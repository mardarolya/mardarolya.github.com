{"version":3,"sources":["D:/Mardar/different projects/user/users/src/$_lazy_route_resource lazy","D:/Mardar/different projects/user/users/src/app/app.component.html","D:/Mardar/different projects/user/users/src/app/app.component.ts","D:/Mardar/different projects/user/users/src/app/app.module.ts","D:/Mardar/different projects/user/users/src/app/components/user-info/user-info.component.html","D:/Mardar/different projects/user/users/src/app/components/user-info/user-info.component.ts","D:/Mardar/different projects/user/users/src/app/services/user.service.ts","D:/Mardar/different projects/user/users/src/environments/environment.ts","D:/Mardar/different projects/user/users/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Mardar/different projects/user/users/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm\\\">\\n            <table class=\\\"table table-hover table-bordered\\\">\\n                <thead class=\\\"thead-dark\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Name</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let user of users\\\" (click)=\\\"getUserInfo(user)\\\" style=\\\"cursor: pointer\\\">\\n                    <td scope=\\\"row\\\">{{user.name}}</td>\\n                    <td>{{user.email}}</td>\\n                  </tr>\\n                </tbody>\\n            </table>\\n            <div *ngIf=\\\"isError\\\">\\n              <span> Ooops! There is some error. Try again! </span> \\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getUsers()\\\">Get users</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm\\\">\\n          <app-user-info [user]=\\\"currentUser\\\" *ngIf=\\\"currentUser\\\" (cleanUser)=\\\"currentUser = null\\\"></app-user-info>\\n        </div>\\n        \\n      </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Mardar/different projects/user/users/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  public currentUser: User = null;\n  public users: User[] = [];\n  public isError: Boolean = false;\n\n  constructor(public userService: UserService) { \n  }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  public getUsers() {\n    this.isError = false;\n    this.userService.getUsers((result)=>{\n      this.users = result;      \n    }, (error)=>{\n      this.isError = true;\n      console.log(error)\n    })\n  }\n\n  public getUserInfo(user){\n    this.currentUser = null;\n    setTimeout(()=>{\n      this.currentUser = user;\n    }, 500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from './services/user.service';\nimport { AppComponent } from './app.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    NgbModule,\n    FormsModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/app/app.module.ts","module.exports = \"<div class=\\\"card\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"../assets/images/user.png\\\" alt=\\\"User card\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\" style=\\\"text-align: center\\\">{{user.name}}</h5>\\n      <form>\\n          <div class=\\\"form-group\\\">\\n            <p class=\\\"icon-phone\\\">{{user.phone}}</p>\\n            <p class=\\\"icon-mail-alt\\\">{{user.email}}</p>\\n            <p class=\\\"icon-globe\\\">{{user.website}}</p>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\" [(ngModel)]=\\\"userAddress\\\" readonly>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"company\\\">Company</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company\\\" name=\\\"company\\\" [(ngModel)]=\\\"userCompany\\\" readonly>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeCard()\\\">Close the card</button>\\n      </form>\\n    </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Mardar/different projects/user/users/src/app/components/user-info/user-info.component.html\n// module id = ../../../../../src/app/components/user-info/user-info.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html'\n})\nexport class UserInfoComponent implements OnInit {\n  @Input() user: User;\n  @Output() cleanUser: EventEmitter<any> = new EventEmitter<any>();\n\n  public userAddress: string;\n  public userCompany: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.user) {\n      this.userAddress = this.user.address[\"street\"] + \" \" + this.user.address[\"suite\"] + \" \" + this.user.address[\"city\"] + \" \" + this.user.address[\"zipcode\"]\n      this.userCompany = this.user.company[\"name\"] + \" \" + this.user.company[\"catchPhrase\"];\n    }\n  }\n\n  public closeCard(){\n    this.cleanUser.emit();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/app/components/user-info/user-info.component.ts","import { Injectable, Optional, Inject } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nexport class User {\r\n    public name: string;\r\n    public userName: string;\r\n    public address: string;\r\n    public company: string;\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    private headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n    public today: string;\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    public returnGet(pathQuery, success, failed){\r\n        return this.http\r\n        .get(pathQuery, { headers: this.headers })\r\n        .toPromise()\r\n        .then((res: any) => {\r\n            success(JSON.parse(res._body));\r\n        })\r\n        .catch((error: any) => {\r\n            failed(error);\r\n        });\r\n    }\r\n\r\n    public getUsers(success: ((result: any) => void), failed: ((error: any) => void)) {\r\n        let pathQuery = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\n        return this.returnGet(pathQuery, success, failed);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Mardar/different projects/user/users/src/main.ts"],"sourceRoot":"webpack:///"}